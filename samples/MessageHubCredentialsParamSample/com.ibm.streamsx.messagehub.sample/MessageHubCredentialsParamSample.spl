namespace com.ibm.streamsx.messagehub.sample ;

use com.ibm.streamsx.messagehub::MessageHubProducer ;
use com.ibm.streamsx.messagehub::MessageHubConsumer ;

composite MessageHubCredentialsParamSample
{
    type
        Message = tuple<rstring key, rstring message>;
    graph
        (stream<Message> Beacon_1_out0) as Beacon_1 = Beacon()
        {
            param
                initDelay: 5f;
                iterations : 10u;
            output Beacon_1_out0:
                key = "key_" + (rstring)IterationCount(),
                message = "msg_" + (rstring)IterationCount();
                
        }

        () as MessageHubProducer_2 = MessageHubProducer(Beacon_1_out0)
        {
            param
                credentials : getSubmissionTimeValue ("credentials");
                topic : "test";
        }

        (stream<Message> MessageHubConsumer_3_out0) as
            MessageHubConsumer_3 = MessageHubConsumer()
        {
            param
                credentials : getSubmissionTimeValue ("credentials");
                topic : "test" ;
        }

        () as Custom_4 = Custom(MessageHubConsumer_3_out0)
        {
            logic 
                onTuple MessageHubConsumer_3_out0: 
                {
                    println(MessageHubConsumer_3_out0);
                }
        }
}
