namespace com.ibm.streamsx.messagehub.sample ;

use com.ibm.streamsx.messagehub::MessageHubProducer ;
use com.ibm.streamsx.messagehub::MessageHubConsumer ;
use com.ibm.streamsx.messagehub::MessageType;

composite CredentialsFileSample {
    graph
        (stream<MessageType.StringMessage> Beacon_1_out0) as Beacon_1 = Beacon()
        {
            param
                initDelay: 5f;
                iterations : 10u;
            output Beacon_1_out0:
                key = "key_" + (rstring)IterationCount(),
                message = "msg_" + (rstring)IterationCount();

        }

        () as MessageHubProducer_2 = MessageHubProducer(Beacon_1_out0)
        {
            param
                /*
                 * By default, the operator will look for an file called "eventstreams.json" in the etc/ directory.
                 * Uncomment out this parameter to specify a different file.
                 */
                // credentialsFile : "etc/my-creds.json";
                topic : "test";
        }

        (stream<MessageType.StringMessage> MessageHubConsumer_3_out0) as
            MessageHubConsumer_3 = MessageHubConsumer()
        {
            param
                /*
                 * By default, the operator will look for an file called "eventstreams.json" in the etc/ directory.
                 * Uncomment out this parameter to specify a different file.
                 */
                // credentialsFile : "etc/my-creds.json";
                topic : "test" ;
        }

        () as Custom_4 = Custom(MessageHubConsumer_3_out0)
        {
            logic
                onTuple MessageHubConsumer_3_out0:
                {
                    println(MessageHubConsumer_3_out0);
                }
        }

}

